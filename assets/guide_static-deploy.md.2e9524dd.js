import{o as e,c as n,b as t,d as l}from"./app.6258f395.js";const a='{"title":"Deploying a Static Site","description":"","frontmatter":{},"headers":[{"level":2,"title":"Building The App","slug":"building-the-app"},{"level":3,"title":"Testing The App Locally","slug":"testing-the-app-locally"},{"level":2,"title":"GitHub Pages","slug":"github-pages"},{"level":3,"title":"GitHub Pages and Travis CI","slug":"github-pages-and-travis-ci"},{"level":2,"title":"GitLab Pages and GitLab CI","slug":"gitlab-pages-and-gitlab-ci"},{"level":2,"title":"Netlify","slug":"netlify"},{"level":2,"title":"Google Firebase","slug":"google-firebase"},{"level":2,"title":"Surge","slug":"surge"},{"level":2,"title":"Heroku","slug":"heroku"},{"level":2,"title":"Vercel","slug":"vercel"}],"relativePath":"guide/static-deploy.md","lastUpdated":1622559382038}',o={},s=t("h1",{id:"deploying-a-static-site"},[t("a",{class:"header-anchor",href:"#deploying-a-static-site","aria-hidden":"true"},"#"),l(" Deploying a Static Site")],-1),i=t("p",null,"The following guides are based on some shared assumptions:",-1),r=t("ul",null,[t("li",null,[l("You are using the default build output location ("),t("code",null,"dist"),l("). This location "),t("a",{href:"https://vitejs.dev/config/#build-outdir",target:"_blank",rel:"noopener noreferrer"},[l("can be changed using "),t("code",null,"build.outDir")]),l(", and you can extrapolate instructions from these guides in that case.")]),t("li",null,"Vite is installed as a local dev dependency in your project, and you have setup the following npm scripts:"),t("li",null,"You are using npm. You can use equivalent commands to run the scripts if you are using Yarn or other package managers.")],-1),u=t("div",{class:"language-json"},[t("pre",null,[t("code",null,[t("span",{class:"token punctuation"},"{"),l("\n  "),t("span",{class:"token property"},'"scripts"'),t("span",{class:"token operator"},":"),l(),t("span",{class:"token punctuation"},"{"),l("\n    "),t("span",{class:"token property"},'"build"'),t("span",{class:"token operator"},":"),l(),t("span",{class:"token string"},'"vite build"'),t("span",{class:"token punctuation"},","),l("\n    "),t("span",{class:"token property"},'"preview"'),t("span",{class:"token operator"},":"),l(),t("span",{class:"token string"},'"vite preview"'),l("\n  "),t("span",{class:"token punctuation"},"}"),l("\n"),t("span",{class:"token punctuation"},"}"),l("\n")])])],-1),c=t("p",null,[l("It is important to note that "),t("code",null,"vite preview"),l(" is intended for previewing the build locally and not meant as a production server.")],-1),p=t("div",{class:"tip custom-block"},[t("p",{class:"custom-block-title"},"NOTE"),t("p",null,[l("These guides provide instructions for performing a static deployment of your Vite site. Vite also has experimental support for Server Side Rendering. SSR refers to front-end frameworks that support running the same application in Node.js, pre-rendering it to HTML, and finally hydrating it on the client. Check out the "),t("a",{href:"./ssr.html"},"SSR Guide"),l(" to learn about this feature. On the other hand, if you are looking for integration with traditional server-side frameworks, check out the "),t("a",{href:"./backend-integration.html"},"Backend Integration guide"),l(" instead.")])],-1),d=t("h2",{id:"building-the-app"},[t("a",{class:"header-anchor",href:"#building-the-app","aria-hidden":"true"},"#"),l(" Building The App")],-1),h=t("p",null,[l("You may run "),t("code",null,"npm run build"),l(" command to build the app.")],-1),g=t("div",{class:"language-bash"},[t("pre",null,[t("code",null,[l("$ "),t("span",{class:"token function"},"npm"),l(" run build\n")])])],-1),k=t("p",null,[l("By default, the build output will be placed at "),t("code",null,"dist"),l(". You may deploy this "),t("code",null,"dist"),l(" folder to any of your preferred platforms.")],-1),b=t("h3",{id:"testing-the-app-locally"},[t("a",{class:"header-anchor",href:"#testing-the-app-locally","aria-hidden":"true"},"#"),l(" Testing The App Locally")],-1),m=t("p",null,[l("Once you've built the app, you may test it locally by running "),t("code",null,"npm run preview"),l(" command.")],-1),y=t("div",{class:"language-bash"},[t("pre",null,[t("code",null,[l("$ "),t("span",{class:"token function"},"npm"),l(" run build\n$ "),t("span",{class:"token function"},"npm"),l(" run preview\n")])])],-1),f=t("p",null,[l("The "),t("code",null,"preview"),l(" command will boot up local static web server that serves the files from "),t("code",null,"dist"),l(" at "),t("a",{href:"http://localhost:5000",target:"_blank",rel:"noopener noreferrer"},"http://localhost:5000"),l(". It's an easy way to check if the production build looks OK in your local environment.")],-1),v=t("p",null,[l("You may configure the port of the server py passing "),t("code",null,"--port"),l(" flag as an argument.")],-1),w=t("div",{class:"language-json"},[t("pre",null,[t("code",null,[t("span",{class:"token punctuation"},"{"),l("\n  "),t("span",{class:"token property"},'"scripts"'),t("span",{class:"token operator"},":"),l(),t("span",{class:"token punctuation"},"{"),l("\n    "),t("span",{class:"token property"},'"preview"'),t("span",{class:"token operator"},":"),l(),t("span",{class:"token string"},'"vite preview --port 8080"'),l("\n  "),t("span",{class:"token punctuation"},"}"),l("\n"),t("span",{class:"token punctuation"},"}"),l("\n")])])],-1),E=t("p",null,[l("Now the "),t("code",null,"preview"),l(" method will launch the server at "),t("a",{href:"http://localhost:8080",target:"_blank",rel:"noopener noreferrer"},"http://localhost:8080"),l(".")],-1),R=t("h2",{id:"github-pages"},[t("a",{class:"header-anchor",href:"#github-pages","aria-hidden":"true"},"#"),l(" GitHub Pages")],-1),j=t("ol",null,[t("li",null,[t("p",null,[l("Set the correct "),t("code",null,"base"),l(" in "),t("code",null,"vite.config.js"),l(".")]),t("p",null,[l("If you are deploying to "),t("code",null,"https://<USERNAME>.github.io/"),l(", you can omit "),t("code",null,"base"),l(" as it defaults to "),t("code",null,"'/'"),l(".")]),t("p",null,[l("If you are deploying to "),t("code",null,"https://<USERNAME>.github.io/<REPO>/"),l(", for example your repository is at "),t("code",null,"https://github.com/<USERNAME>/<REPO>"),l(", then set "),t("code",null,"base"),l(" to "),t("code",null,"'/<REPO>/'"),l(".")])]),t("li",null,[t("p",null,[l("Inside your project, create "),t("code",null,"deploy.sh"),l(" with the following content (with highlighted lines uncommented appropriately), and run it to deploy:")])])],-1),S=t("div",{class:"language-bash"},[t("div",{class:"highlight-lines"},[t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("div",{class:"highlighted"}," "),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("div",{class:"highlighted"}," "),t("br"),t("br"),t("div",{class:"highlighted"}," "),t("br"),t("br"),t("br")]),t("pre",null,[t("code",null,[t("span",{class:"token shebang important"},"#!/usr/bin/env sh"),l("\n\n"),t("span",{class:"token comment"},"# abort on errors"),l("\n"),t("span",{class:"token builtin class-name"},"set"),l(" -e\n\n"),t("span",{class:"token comment"},"# build"),l("\n"),t("span",{class:"token function"},"npm"),l(" run build\n\n"),t("span",{class:"token comment"},"# navigate into the build output directory"),l("\n"),t("span",{class:"token builtin class-name"},"cd"),l(" dist\n\n"),t("span",{class:"token comment"},"# if you are deploying to a custom domain"),l("\n"),t("span",{class:"token comment"},"# echo 'www.example.com' > CNAME"),l("\n\n"),t("span",{class:"token function"},"git"),l(" init\n"),t("span",{class:"token function"},"git"),l(),t("span",{class:"token function"},"add"),l(" -A\n"),t("span",{class:"token function"},"git"),l(" commit -m "),t("span",{class:"token string"},"'deploy'"),l("\n\n"),t("span",{class:"token comment"},"# if you are deploying to https://<USERNAME>.github.io"),l("\n"),t("span",{class:"token comment"},"# git push -f git@github.com:<USERNAME>/<USERNAME>.github.io.git master"),l("\n\n"),t("span",{class:"token comment"},"# if you are deploying to https://<USERNAME>.github.io/<REPO>"),l("\n"),t("span",{class:"token comment"},"# git push -f git@github.com:<USERNAME>/<REPO>.git master:gh-pages"),l("\n\n"),t("span",{class:"token builtin class-name"},"cd"),l(" -\n")])])],-1),P=t("div",{class:"tip custom-block"},[t("p",{class:"custom-block-title"},"TIP"),t("p",null,"You can also run the above script in your CI setup to enable automatic deployment on each push.")],-1),G=t("h3",{id:"github-pages-and-travis-ci"},[t("a",{class:"header-anchor",href:"#github-pages-and-travis-ci","aria-hidden":"true"},"#"),l(" GitHub Pages and Travis CI")],-1),A=t("ol",null,[t("li",null,[t("p",null,[l("Set the correct "),t("code",null,"base"),l(" in "),t("code",null,"vite.config.js"),l(".")]),t("p",null,[l("If you are deploying to "),t("code",null,"https://<USERNAME or GROUP>.github.io/"),l(", you can omit "),t("code",null,"base"),l(" as it defaults to "),t("code",null,"'/'"),l(".")]),t("p",null,[l("If you are deploying to "),t("code",null,"https://<USERNAME or GROUP>.github.io/<REPO>/"),l(", for example your repository is at "),t("code",null,"https://github.com/<USERNAME>/<REPO>"),l(", then set "),t("code",null,"base"),l(" to "),t("code",null,"'/<REPO>/'"),l(".")])]),t("li",null,[t("p",null,[l("Create a file named "),t("code",null,".travis.yml"),l(" in the root of your project.")])]),t("li",null,[t("p",null,[l("Run "),t("code",null,"npm install"),l(" locally and commit the generated lockfile ("),t("code",null,"package-lock.json"),l(").")])]),t("li",null,[t("p",null,[l("Use the GitHub Pages deploy provider template, and follow the "),t("a",{href:"https://docs.travis-ci.com/user/deployment/pages/",target:"_blank",rel:"noopener noreferrer"},"Travis CI documentation"),l(".")])])],-1),O=t("div",{class:"language-yaml"},[t("pre",null,[t("code",null,[t("span",{class:"token key atrule"},"language"),t("span",{class:"token punctuation"},":"),l(" node_js\n"),t("span",{class:"token key atrule"},"node_js"),t("span",{class:"token punctuation"},":"),l("\n  "),t("span",{class:"token punctuation"},"-"),l(" lts/*\n"),t("span",{class:"token key atrule"},"install"),t("span",{class:"token punctuation"},":"),l("\n  "),t("span",{class:"token punctuation"},"-"),l(" npm ci\n"),t("span",{class:"token key atrule"},"script"),t("span",{class:"token punctuation"},":"),l("\n  "),t("span",{class:"token punctuation"},"-"),l(" npm run build\n"),t("span",{class:"token key atrule"},"deploy"),t("span",{class:"token punctuation"},":"),l("\n  "),t("span",{class:"token key atrule"},"provider"),t("span",{class:"token punctuation"},":"),l(" pages\n  "),t("span",{class:"token key atrule"},"skip_cleanup"),t("span",{class:"token punctuation"},":"),l(),t("span",{class:"token boolean important"},"true"),l("\n  "),t("span",{class:"token key atrule"},"local_dir"),t("span",{class:"token punctuation"},":"),l(" dist\n  "),t("span",{class:"token comment"},"# A token generated on GitHub allowing Travis to push code on you repository."),l("\n  "),t("span",{class:"token comment"},"# Set in the Travis settings page of your repository, as a secure variable."),l("\n  "),t("span",{class:"token key atrule"},"github_token"),t("span",{class:"token punctuation"},":"),l(" $GITHUB_TOKEN\n  "),t("span",{class:"token key atrule"},"keep_history"),t("span",{class:"token punctuation"},":"),l(),t("span",{class:"token boolean important"},"true"),l("\n  "),t("span",{class:"token key atrule"},"on"),t("span",{class:"token punctuation"},":"),l("\n    "),t("span",{class:"token key atrule"},"branch"),t("span",{class:"token punctuation"},":"),l(" master\n")])])],-1),_=t("h2",{id:"gitlab-pages-and-gitlab-ci"},[t("a",{class:"header-anchor",href:"#gitlab-pages-and-gitlab-ci","aria-hidden":"true"},"#"),l(" GitLab Pages and GitLab CI")],-1),I=t("ol",null,[t("li",null,[t("p",null,[l("Set the correct "),t("code",null,"base"),l(" in "),t("code",null,"vite.config.js"),l(".")]),t("p",null,[l("If you are deploying to "),t("code",null,"https://<USERNAME or GROUP>.gitlab.io/"),l(", you can omit "),t("code",null,"base"),l(" as it defaults to "),t("code",null,"'/'"),l(".")]),t("p",null,[l("If you are deploying to "),t("code",null,"https://<USERNAME or GROUP>.gitlab.io/<REPO>/"),l(", for example your repository is at "),t("code",null,"https://gitlab.com/<USERNAME>/<REPO>"),l(", then set "),t("code",null,"base"),l(" to "),t("code",null,"'/<REPO>/'"),l(".")])]),t("li",null,[t("p",null,[l("Set "),t("code",null,"build.outDir"),l(" in "),t("code",null,"vite.config.js"),l(" to "),t("code",null,"public"),l(".")])]),t("li",null,[t("p",null,[l("Create a file called "),t("code",null,".gitlab-ci.yml"),l(" in the root of your project with the content below. This will build and deploy your site whenever you make changes to your content:")])])],-1),T=t("div",{class:"language-yaml"},[t("pre",null,[t("code",null,[t("span",{class:"token key atrule"},"image"),t("span",{class:"token punctuation"},":"),l(" node"),t("span",{class:"token punctuation"},":"),l("10.22.0\n"),t("span",{class:"token key atrule"},"pages"),t("span",{class:"token punctuation"},":"),l("\n  "),t("span",{class:"token key atrule"},"cache"),t("span",{class:"token punctuation"},":"),l("\n    "),t("span",{class:"token key atrule"},"paths"),t("span",{class:"token punctuation"},":"),l("\n      "),t("span",{class:"token punctuation"},"-"),l(" node_modules/\n  "),t("span",{class:"token key atrule"},"script"),t("span",{class:"token punctuation"},":"),l("\n    "),t("span",{class:"token punctuation"},"-"),l(" npm install\n    "),t("span",{class:"token punctuation"},"-"),l(" npm run build\n  "),t("span",{class:"token key atrule"},"artifacts"),t("span",{class:"token punctuation"},":"),l("\n    "),t("span",{class:"token key atrule"},"paths"),t("span",{class:"token punctuation"},":"),l("\n      "),t("span",{class:"token punctuation"},"-"),l(" public\n  "),t("span",{class:"token key atrule"},"only"),t("span",{class:"token punctuation"},":"),l("\n    "),t("span",{class:"token punctuation"},"-"),l(" master\n")])])],-1),U=t("h2",{id:"netlify"},[t("a",{class:"header-anchor",href:"#netlify","aria-hidden":"true"},"#"),l(" Netlify")],-1),N=t("ol",null,[t("li",null,[l("On "),t("a",{href:"https://netlify.com",target:"_blank",rel:"noopener noreferrer"},"Netlify"),l(", setup up a new project from GitHub with the following settings:")])],-1),H=t("ul",null,[t("li",null,[t("strong",null,"Build Command:"),l(),t("code",null,"vite build"),l(" or "),t("code",null,"npm run build")]),t("li",null,[t("strong",null,"Publish directory:"),l(),t("code",null,"dist")])],-1),M=t("ol",{start:"2"},[t("li",null,"Hit the deploy button.")],-1),C=t("h2",{id:"google-firebase"},[t("a",{class:"header-anchor",href:"#google-firebase","aria-hidden":"true"},"#"),l(" Google Firebase")],-1),$=t("ol",null,[t("li",null,[t("p",null,[l("Make sure you have "),t("a",{href:"https://www.npmjs.com/package/firebase-tools",target:"_blank",rel:"noopener noreferrer"},"firebase-tools"),l(" installed.")])]),t("li",null,[t("p",null,[l("Create "),t("code",null,"firebase.json"),l(" and "),t("code",null,".firebaserc"),l(" at the root of your project with the following content:")])])],-1),x=t("p",null,[t("code",null,"firebase.json"),l(":")],-1),B=t("div",{class:"language-json"},[t("pre",null,[t("code",null,[t("span",{class:"token punctuation"},"{"),l("\n  "),t("span",{class:"token property"},'"hosting"'),t("span",{class:"token operator"},":"),l(),t("span",{class:"token punctuation"},"{"),l("\n    "),t("span",{class:"token property"},'"public"'),t("span",{class:"token operator"},":"),l(),t("span",{class:"token string"},'"dist"'),t("span",{class:"token punctuation"},","),l("\n    "),t("span",{class:"token property"},'"ignore"'),t("span",{class:"token operator"},":"),l(),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),l("\n  "),t("span",{class:"token punctuation"},"}"),l("\n"),t("span",{class:"token punctuation"},"}"),l("\n")])])],-1),D=t("p",null,[t("code",null,".firebaserc"),l(":")],-1),L=t("div",{class:"language-js"},[t("pre",null,[t("code",null,[t("span",{class:"token punctuation"},"{"),l("\n "),t("span",{class:"token string"},'"projects"'),t("span",{class:"token operator"},":"),l(),t("span",{class:"token punctuation"},"{"),l("\n   "),t("span",{class:"token string"},'"default"'),t("span",{class:"token operator"},":"),l(),t("span",{class:"token string"},'"<YOUR_FIREBASE_ID>"'),l("\n "),t("span",{class:"token punctuation"},"}"),l("\n"),t("span",{class:"token punctuation"},"}"),l("\n")])])],-1),Y=t("ol",{start:"3"},[t("li",null,[l("After running "),t("code",null,"npm run build"),l(", deploy using the command "),t("code",null,"firebase deploy"),l(".")])],-1),V=t("h2",{id:"surge"},[t("a",{class:"header-anchor",href:"#surge","aria-hidden":"true"},"#"),l(" Surge")],-1),F=t("ol",null,[t("li",null,[t("p",null,[l("First install "),t("a",{href:"https://www.npmjs.com/package/surge",target:"_blank",rel:"noopener noreferrer"},"surge"),l(", if you haven’t already.")])]),t("li",null,[t("p",null,[l("Run "),t("code",null,"npm run build"),l(".")])]),t("li",null,[t("p",null,[l("Deploy to surge by typing "),t("code",null,"surge dist"),l(".")])])],-1),q=t("p",null,[l("You can also deploy to a "),t("a",{href:"http://surge.sh/help/adding-a-custom-domain",target:"_blank",rel:"noopener noreferrer"},"custom domain"),l(" by adding "),t("code",null,"surge dist yourdomain.com"),l(".")],-1),K=t("h2",{id:"heroku"},[t("a",{class:"header-anchor",href:"#heroku","aria-hidden":"true"},"#"),l(" Heroku")],-1),z=t("ol",null,[t("li",null,[t("p",null,[l("Install "),t("a",{href:"https://devcenter.heroku.com/articles/heroku-cli",target:"_blank",rel:"noopener noreferrer"},"Heroku CLI"),l(".")])]),t("li",null,[t("p",null,[l("Create a Heroku account by "),t("a",{href:"https://signup.heroku.com",target:"_blank",rel:"noopener noreferrer"},"signing up"),l(".")])]),t("li",null,[t("p",null,[l("Run "),t("code",null,"heroku login"),l(" and fill in your Heroku credentials:")])])],-1),J=t("div",{class:"language-bash"},[t("pre",null,[t("code",null,"$ heroku login\n")])],-1),Q=t("ol",{start:"4"},[t("li",null,[l("Create a file called "),t("code",null,"static.json"),l(" in the root of your project with the below content:")])],-1),W=t("p",null,[t("code",null,"static.json"),l(":")],-1),X=t("div",{class:"language-json"},[t("pre",null,[t("code",null,[t("span",{class:"token punctuation"},"{"),l("\n  "),t("span",{class:"token property"},'"root"'),t("span",{class:"token operator"},":"),l(),t("span",{class:"token string"},'"./dist"'),l("\n"),t("span",{class:"token punctuation"},"}"),l("\n")])])],-1),Z=t("p",null,[l("This is the configuration of your site; read more at "),t("a",{href:"https://github.com/heroku/heroku-buildpack-static",target:"_blank",rel:"noopener noreferrer"},"heroku-buildpack-static"),l(".")],-1),ee=t("ol",{start:"5"},[t("li",null,"Set up your Heroku git remote:")],-1),ne=t("div",{class:"language-bash"},[t("pre",null,[t("code",null,[t("span",{class:"token comment"},"# version change"),l("\n$ "),t("span",{class:"token function"},"git"),l(" init\n$ "),t("span",{class:"token function"},"git"),l(),t("span",{class:"token function"},"add"),l(),t("span",{class:"token builtin class-name"},"."),l("\n$ "),t("span",{class:"token function"},"git"),l(" commit -m "),t("span",{class:"token string"},'"My site ready for deployment."'),l("\n\n"),t("span",{class:"token comment"},"# creates a new app with a specified name"),l("\n$ heroku apps:create example\n\n"),t("span",{class:"token comment"},"# set buildpack for static sites"),l("\n$ heroku buildpacks:set https://github.com/heroku/heroku-buildpack-static.git\n")])])],-1),te=t("ol",{start:"6"},[t("li",null,"Deploy your site:")],-1),le=t("div",{class:"language-bash"},[t("pre",null,[t("code",null,[t("span",{class:"token comment"},"# publish site"),l("\n$ "),t("span",{class:"token function"},"git"),l(" push heroku master\n\n"),t("span",{class:"token comment"},"# opens a browser to view the Dashboard version of Heroku CI"),l("\n$ heroku "),t("span",{class:"token function"},"open"),l("\n")])])],-1),ae=t("h2",{id:"vercel"},[t("a",{class:"header-anchor",href:"#vercel","aria-hidden":"true"},"#"),l(" Vercel")],-1),oe=t("p",null,[l("To deploy your Vite app with a "),t("a",{href:"https://vercel.com/docs/git",target:"_blank",rel:"noopener noreferrer"},"Vercel for Git"),l(", make sure it has been pushed to a Git repository.")],-1),se=t("p",null,[l("Go to "),t("a",{href:"https://vercel.com/import/git",target:"_blank",rel:"noopener noreferrer"},"https://vercel.com/import/git"),l(" and import the project into Vercel using your Git of choice (GitHub, GitLab or BitBucket). Follow the wizard to select the project root with the project's "),t("code",null,"package.json"),l(" and override the build step using "),t("code",null,"npm run build"),l(" and the output dir to be "),t("code",null,"./dist")],-1),ie=t("p",null,[t("img",{src:"/docs-next/assets/vercel-configuration.fed410b3.png",alt:"Override Vercel Configuration"})],-1),re=t("p",null,'After your project has been imported, all subsequent pushes to branches will generate Preview Deployments, and all changes made to the Production Branch (commonly "main") will result in a Production Deployment.',-1),ue=t("p",null,[l("Once deployed, you will get a URL to see your app live, such as the following: "),t("a",{href:"https://vite.vercel.app",target:"_blank",rel:"noopener noreferrer"},"https://vite.vercel.app")],-1);o.render=function(t,l,a,o,ce,pe){return e(),n("div",null,[s,i,r,u,c,p,d,h,g,k,b,m,y,f,v,w,E,R,j,S,P,G,A,O,_,I,T,U,N,H,M,C,$,x,B,D,L,Y,V,F,q,K,z,J,Q,W,X,Z,ee,ne,te,le,ae,oe,se,ie,re,ue])};export default o;export{a as __pageData};
